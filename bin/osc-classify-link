#!/bin/bash
#
# Classify one or more checked out OBS project trees, to distinguish
# between projects which have been branched / linkpac'd / copypac'd /
# aggregatepac'd.
#
# TODO:
#   - rewrite as an OSC plugin: https://github.com/openSUSE/osc/issues/14
#   - add option to do server-side "osc cat _link" check
#
# Adam Spiers <aspiers@suse.com>
#

me=`basename $0`

usage () {
    # Call as: usage [EXITCODE] [USAGE MESSAGE]
    exit_code=1
    if [[ "$1" == [0-9] ]]; then
        exit_code="$1"
        shift
    fi
    if [ -n "$1" ]; then
        echo >&2 "$*"
        echo
    fi

    cat <<EOF >&2
Usage: $me [<PROJECT-DIR | PACKAGE-DIR> ...]
Options:
  -h, --help     Show this help and exit
options
EOF
    exit "$exit_code"
}

classify () {
    dir="$1"

    if ! [ -d "$dir" ]; then
        echo >&2 "$dir not a directory; aborting"
        exit 1
    fi

    type=

    if [ -f "$dir/_aggregate" ]; then
        target=$( sed -ne '/.*<aggregate project="\(.\+\)">.*/{s//\1/;p}' "$dir/_aggregate" )
        type="aggregate -> $target"
        return 0
    fi

    link_info=$(
        osc info "$dir" | \
            sed -ne '/^Link info: / {
                        s///;
                        s/^expanded link to project /expanded -> /;
                        s/^project /-> /;
                        s/, [lx]\?srcmd5 [0-9a-f]\{32\}//g;
                        s/, package /\//;
                        s/, rev None//;
                        p}'
    )

    if [ $? != 0 ] || [ -z "$link_info" ]; then
        echo >&2 "osc info $dir failed; skipping"
        return 1
    fi

    if [ "$link_info" = 'None' ]; then
        type='normal or copypac'
        return 0
    fi

    if [ -f "$dir/_link" ] && grep -q -- '<branch/>' "$dir/_link"; then
        type="linkpac $link_info"
    elif ! grep -q -- '<linkinfo .* baserev=' "$dir/.osc/_files"; then
        # Branches always contain the baserev attribute in <linkinfo>
        # in .osc/_files so if it's missing, that eliminates the
        # possibility it's a branch.  linkpac's don't usually contain
        # baserev in <linkinfo>, but they can.
        type="linkpac $link_info"
    else
        # This is our best guess without doing a server round-trip
        # FIXME: add option for osc cat _link
        type="linkpac or branch $link_info"
    fi

    return 0
}

show_classification () {
    dir="$1"
    classify "$dir"
    printf "%-26s %s\n" "${dir#./}" "$type"
}

main () {
    if [ "$1" == '-h' ] || [ "$1" == '--help' ]; then
        usage 0
    fi

    if [ $# = 0 ]; then
        set -- .
    fi

    for dir in "$@"; do
        if ! [ -e "$dir/.osc/_project" ]; then
            echo >&2 "$dir is not associated with a Build Service project; aborting."
            exit 1
        fi
    done

    for dir in "$@"; do
        if [ -e "$dir/.osc/_package" ]; then
            show_classification "$dir"
        else
            for pkg in "$dir"/*; do
                if [ -e "$pkg/.osc/_package" ]; then
                    show_classification "$pkg"
                fi
            done
        fi
    done
}

if [ -z "$OSC_CLASSIFY_USE_LIBRARY" ]; then
    main "$@"
fi
